<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script>
    $(document).ready(function(){
        // jquery 플러그인 만드는 방법 참고
        // https://learn.jquery.com/plugins/basic-plugin-creation/
        $.fn.bindingFnc = function (obj) {

            // jQuery API에서 공식적으로 form 요소의 disabled, selected, checked와 같은
            // 속성값을 확인 또는 변경하는 경우는 .prop()을 사용하길 권장한다.
            // 왜지?
            // checked속성이 처음부터 없었던 엘리먼트는 undefined로 가져와진다.

            for (let prop in obj) {
                // name 엘리먼트 찾기
                let getelements  = $("body").find('[name='+prop+']').get();

                // 그것의 value에 넣어주기
                // 만약 체크박스라면
                if ($(getelements).attr('type') == 'checkbox') {
                    for (let element of getelements) {
                        for (let checkarr of obj[prop]) {
                            if (checkarr == element.value){
                                $(element).prop("checked", true);
                            }
                        }
                    }

                    //만약 라디오버튼이면
                } else if ($(getelements).attr('type') == 'radio') {
                    for (let element of $(getelements)) {
                        if ($(element).val() == obj[prop]) {
                            $(element).prop("checked", true);
                        }
                    }

                    //파일은 value값 세팅할 수 없음
                } else if ($(getelements).attr('type') == 'file') {
                    console.log('[name]',$(getelements).attr("name"),'>>>> 파일은 value값 세팅할 수 없음 <<<<');
                }

                // 셀렉트이면 셀렉트 해주기
                else if ($(getelements).attr('tagName') == 'select') {
                    $(getelements).prop("selected", true);
                }

                // 그 외
                else {
                    if($(getelements).attr('name') == undefined ) {
                        console.log("[name] ", prop, ">>>> 해당 name을 가진 element가 없습니다. <<<<");
                    } else {
                        $(getelements).val(obj[prop]);
                    }
                }
            }
        };

        $.fn.bindingFnc2 = function (obj) {

            // jQuery API에서 공식적으로 form 요소의 disabled, selected, checked와 같은
            // 속성값을 확인 또는 변경하는 경우는 .prop()을 사용하길 권장한다.
            // 왜지?
            // checked속성이 처음부터 없었던 엘리먼트는 undefined로 가져와진다.
            let rootElement = $(this);
            $.each(obj, function (key, value) {
                // name 엘리먼트 찾기
                let $strNameEl = rootElement.find('[name=' + key + ']');
                let strType = $strNameEl.attr('type');
                let strVal = $strNameEl.attr('value');
                console.log(value)

                $(selector).each()

                $.each(value, function (key2, value2) {
                    console.log(value2)
                    // if (strType == 'checkbox' && value2 == strVal){
                    //     $strNameEl.prop("checked", true);
                    // }
                })

                // $(obj[key]).each(function (key2) {
                //     console.log(2, getelements.prevObject[key2])
                // });
                // let strInputType = $getelements.attr('type');
                // console.log(strInputType);
                let strInputType = "";

                // 그것의 value에 넣어주기
                // 만약 체크박스라면
                /*if (strInputType == 'checkbox') {
                    for (let element of getelements) {
                        for (let checkarr of obj[prop]) {
                            if (checkarr == element.value){
                                $(element).prop("checked", true);
                            }
                        }
                    }

                    //만약 라디오버튼이면
                } else if (strInputType == 'radio') {
                    for (let element of getelements) {
                        if ($(element).val() == obj[prop]) {
                            $(element).prop("checked", true);
                        }
                    }

                    //파일은 value값 세팅할 수 없음
                } else if (strInputType == 'file') {
                    console.log('[name]',getelements.attr("name"),'>>>> 파일은 value값 세팅할 수 없음 <<<<');

                // 셀렉트이면 셀렉트 해주기
                } else if (getelements.attr('tagName') == 'select') {
                    getelements.prop("selected", true);
                }

                // 그 외
                else {
                    if(strInputType == undefined ) {
                        //console.log("[name] ", prop, ">>>> 해당 name을 가진 element가 없습니다. <<<<");
                    } else {
                        //$getelements.val(obj[prop]);
                    }
                }*/
            });
        };

        $.fn.insideTagInputToMap = function () {
            // 이것의 자식들의 태그를 모두 가지고온다
            // 그것은 input태그만 있다
            let inputs = this.find('input');
            let textareas = this.find('textarea');
            let selects = this.find('select');

            let getelements;
            let checkboxarray = [];
            let checkboxname = "";
            let resultmap = {};

            // 그 input의 name을 가지고오고
            // 그 input의 value를 가지고온다
            for (let prop of inputs) {
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("[type]", getelements.attr('type')," >>>> name이 없는 input 태그가 있습니다 <<<<");
                }

                if (getelements.attr('type') == 'checkbox'){ // 체크박스
                    if ($(prop).is(":checked")){ // 체크되었을 경우
                        // checkboxname과 현재 element name을 가져와 비교
                        if (checkboxname != $(prop).attr('name')) {
                            checkboxarray = []; // name이 다를경우 array를 초기화 한다
                        }
                        checkboxarray.push($(prop).val());
                        resultmap[$(prop).attr('name')] = checkboxarray;
                        checkboxname = $(prop).attr('name');
                    }
                } else if (getelements.attr('type') == 'radio'){ // 라디오버튼
                    if ($(prop).is(":checked")) {
                        resultmap[$(prop).attr('name')] = $(prop).val();
                    }
                } else {
                    resultmap[getelements.attr('name')] = getelements.val();
                }
            }

            for (let prop of textareas) { // 텍스트에어리어
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("name이 없는 textarea 태그가 있습니다");
                }

                resultmap[getelements.attr('name')] = getelements.val();
            }

            for (let prop of selects) { // 셀렉트
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("name이 없는 select 태그가 있습니다");
                }

                resultmap[getelements.attr('name')] = getelements.val();
            }

            //그걸 맵으로 리턴
            return resultmap;
        };

        $.fn.insideTagInputToMap2 = function () {
            // 이것의 자식들의 태그를 모두 가지고온다
            // 그것은 input태그만 있다
            let inputs = this.find('input');
            let textareas = this.find('textarea');
            let selects = this.find('select');

            let getelements;
            let checkboxarray = [];
            let checkboxname = "";
            let resultmap = {};

            // 그 input의 name을 가지고오고
            // 그 input의 value를 가지고온다
            for (let prop of inputs) {
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("[type]", getelements.attr('type')," >>>> name이 없는 input 태그가 있습니다 <<<<");
                }

                if (getelements.attr('type') == 'checkbox'){ // 체크박스
                    if ($(prop).is(":checked")){ // 체크되었을 경우
                        // checkboxname과 현재 element name을 가져와 비교
                        if (checkboxname != $(prop).attr('name')) {
                            checkboxarray = []; // name이 다를경우 array를 초기화 한다
                        }
                        checkboxarray.push($(prop).val());
                        resultmap[$(prop).attr('name')] = checkboxarray;
                        checkboxname = $(prop).attr('name');
                    }
                } else if (getelements.attr('type') == 'radio'){ // 라디오버튼
                    if ($(prop).is(":checked")) {
                        resultmap[$(prop).attr('name')] = $(prop).val();
                    }
                } else {
                    resultmap[getelements.attr('name')] = getelements.val();
                }
            }

            for (let prop of textareas) { // 텍스트에어리어
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("name이 없는 textarea 태그가 있습니다");
                }

                resultmap[getelements.attr('name')] = getelements.val();
            }

            for (let prop of selects) { // 셀렉트
                getelements = $(prop).eq(0);

                if ( getelements.attr('name') == undefined ) {
                    console.log("name이 없는 select 태그가 있습니다");
                }

                resultmap[getelements.attr('name')] = getelements.val();
            }

            //그걸 맵으로 리턴
            return resultmap;
        };

        let object = {};
        let testData = {
            "todo": ['sleep', 'study'],
            "order": ['caffe latte', 'cafe olleh'],
            "company": "naver"
            /*"company": "naver",
            "company2": "kakao",
            "order": ['caffe latte', 'cafe olleh'],
            "language": "css",
            "todo": ['sleep', 'study'],
            "todo2": ['sleep'],
            "CONTENT": "test11",
            "CONTENT2": "test22",
            "TITLE": "test00",
            "filepath": "안영은(930330)-2023년도자료.pdf",
            "rrrr": "qqqq",
            "pwdtest": "1q2w3e4r!"*/
        };

        $(document).on("click", "#save", function(){
            object = $("#test").insideTagInputToMap();
            console.log(object);
        });

        $(document).on("click", "#bind", function(){
            $("#test").bindingFnc2(testData);
        });

    })

</script>

<body>

<button id="bind" >바인딩 버튼</button>

<div>
    <div>
        <h4><input type="text" name="TITLE" placeholder="루럴루럴"></h4>
        <div>
            <textarea name="CONTENT" id="editor"></textarea><br>
            <textarea name="CONTENT2" id="editor2"></textarea><br><br><br>
        </div>
        /////////////////////////////
        <div id="test">
            <input type="file" name="filepath"><br>
            <input type="number" name="numbertest"><br>
            <input type="password" name="pwdtest"><br><br>

            <input type="checkbox" name="todo" value="study">study<br>
            <input type="checkbox" name="todo" value="sleep">sleep<br>
            <input type="checkbox" name="todo" value="eat">eat<br><br>

            <input type="checkbox" name="todo2" value="study">study<br>

            <input type="radio" name="company2" value="google">google<br>
            <input type="radio" name="company2" value="naver">naver<br><br>

            <div>
                <input type="radio" name="company" value="google">google<br>
                <input type="radio" name="company" value="naver">naver<br>
                <input type="radio" name="company" value="kakao">kakao<br><br>
            </div>

            <input type="checkbox" name="todo2" value="sleep">sleep<br>
            <input type="checkbox" name="todo2" value="eat">eat<br>

            <input type="radio" name="company2" value="kakao">kakao<br><br>

            <select name="language">
                <option value=""> 선택
                <option value="java"> JAVA
                <option value="css"> CSS
                <option value="html"> HTML
                <option value="c"> C
            </select>

            <select name="order" multiple>
                <option value="americano">아메리카노</option>
                <option value="caffe latte">카페라테</option>
                <option value="cafe olleh">카페오레</option>
                <option value="espresso">에스프레소</option>
            </select>
        </div>
        /////////////////////////////
    </div>
</div>
    <button id="save">저장</button>
    <input type="reset" onclick="" value="취소">
</body>
